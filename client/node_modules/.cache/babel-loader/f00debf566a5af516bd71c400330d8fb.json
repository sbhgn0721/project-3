{"ast":null,"code":"var _jsxFileName = \"/Users/sitruk/Desktop/bootcamp/homework/project3/project-3/client/src/pages/RewardList.js\";\nimport React, { Component } from \"react\";\nimport NavTabs from \"../components/NavTabs/NavTabs\";\nimport RewardForm from \"../components/RewardForm/RewardForm\"; // import CheckboxContainer from \"../components/CheckboxContainer/CheckboxContainer\";\n\nimport API from \"../utils/API\";\n\nclass RewardList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleLevel1RewardNameChange = event => {\n      this.setState({\n        rewardLevel1Name: event.target.value\n      });\n    };\n\n    this.handleSaveLevel1Reward = event => {\n      event.preventDefault();\n      console.log('level1', this.state.rewardLevel1Name);\n      let savedReward = {\n        id: this.state.rewardList.filter(obj => obj.level === \"1\")[0]._id,\n        rewardName: this.state.rewardLevel1Name,\n        level: \"1\"\n      };\n      API.saveReward(savedReward).then(this.setState({\n        message: alert(\"Your reward is saved!\")\n      })).then(res => this.componentDidMount()).catch(err => console.log(err));\n    };\n\n    this.handleLevel2RewardNameChange = event => {\n      this.setState({\n        rewardLevel2Name: event.target.value\n      });\n    };\n\n    this.handleSaveLevel2Reward = event => {\n      event.preventDefault();\n      console.log('level 2', this.state.rewardLevel2Name);\n      let savedReward = {\n        id: this.state.rewardList.filter(obj => obj.level === \"2\")[0]._id,\n        rewardName: this.state.rewardLevel2Name,\n        level: \"2\"\n      };\n      API.saveReward(savedReward).then(this.setState({\n        message: alert(\"Your reward is saved!\")\n      })).then(res => this.componentDidMount()).catch(err => console.log(err));\n    };\n\n    this.handleLevel3RewardNameChange = event => {\n      this.setState({\n        rewardLevel3Name: event.target.value\n      });\n    };\n\n    this.handleSaveLevel3Reward = event => {\n      event.preventDefault();\n      console.log('level 3', this.state.rewardLevel3Name);\n      let savedReward = {\n        id: this.state.rewardList.filter(obj => obj.level === \"3\")[0]._id,\n        rewardName: this.state.rewardLevel3Name,\n        level: \"3\"\n      };\n      API.saveReward(savedReward).then(this.setState({\n        message: alert(\"Your reward is saved!\")\n      })).then(res => this.componentDidMount()).catch(err => console.log(err));\n    };\n\n    this.handleCheckboxChange = event => {\n      event.preventDefault();\n      console.log('completion status', this.state.completion);\n      console.log(\"what is event\", event.target);\n      const itemName = event.target.name;\n      const isChecked = event.target.checked;\n      const id = event.target.id;\n      const level = event.target.getAttribute('level');\n      const dueDate = event.target.getAttribute('duedate');\n      this.setState(prevState => ({\n        checkedItems: prevState.checkedItems.set(itemName, isChecked)\n      }));\n      console.log(\"combine\", itemName, isChecked, id, level, dueDate);\n      let chore = {\n        id: id,\n        choreName: itemName,\n        completion: isChecked,\n        dueDate: dueDate,\n        level: level\n      };\n      API.updateChore(chore) // .then(this.setState({message:alert(\"Good job!\")}))\n      .then(res => this.componentDidMount()).catch(err => console.log(err));\n    };\n\n    this.state = {\n      rewardLevel1Name: \"\",\n      rewardLevel2Name: \"\",\n      rewardLevel3Name: \"\",\n      level: \"1\",\n      checkedItems: new Map(),\n      completion: \"false\",\n      rewardList: [],\n      level1ChoreList: [],\n      level2ChoreList: [],\n      level3ChoreList: []\n    };\n    this.handleCheckboxChange = this.handleCheckboxChange.bind(this);\n  } // state = {\n  //     rewardLevel1Name: \"\",\n  //     rewardLevel2Name: \"\",\n  //     rewardLevel3Name: \"\",\n  //     level: \"1\",\n  //     completion: \"false\",\n  //     rewardList: [],\n  //     level1ChoreList: [],\n  //     level2ChoreList: [],\n  //     level3ChoreList: []\n  // }\n\n\n  componentDidMount() {\n    API.getReward().then(res => {\n      let level1Name = res.data.filter(obj => obj.level === \"1\")[0].rewardName;\n      let level2Name = res.data.filter(obj => obj.level === \"2\")[0].rewardName;\n      let level3Name = res.data.filter(obj => obj.level === \"3\")[0].rewardName;\n      this.setState({\n        rewardList: res.data,\n        rewardLevel1Name: level1Name,\n        rewardLevel2Name: level2Name,\n        rewardLevel3Name: level3Name\n      });\n    }).then(() => {\n      API.getChoreByLevel(\"1\").then(res => {\n        console.log(\"is it here\", res.data[0].chores);\n        this.setState({\n          level1ChoreList: res.data[0].chores\n        });\n        const level1TotalChores = res.data[0].chores.length;\n        console.log(level1TotalChores);\n        const level1ChoreComplete = res.data[0].checkedItems;\n        console.log(level1ChoreComplete);\n        console.log(typeof level1ChoreComplete);\n      });\n      API.getChoreByLevel(\"2\").then(res => {\n        console.log(\"is it here\", res.data[0].chores);\n        this.setState({\n          level2ChoreList: res.data[0].chores\n        });\n        const level2TotalChores = res.data[0].chores.length;\n        console.log(level2TotalChores);\n      });\n      API.getChoreByLevel(\"3\").then(res => {\n        console.log(\"is it here\", res.data[0].chores);\n        this.setState({\n          level3ChoreList: res.data[0].chores\n        });\n        const level3TotalChores = res.data[0].chores.length;\n        console.log(level3TotalChores);\n      });\n    }).catch(err => console.log(err));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, React.createElement(NavTabs, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }), React.createElement(RewardForm, {\n      rewardLevel1Name: this.state.rewardLevel1Name,\n      rewardLevel2Name: this.state.rewardLevel2Name,\n      rewardLevel3Name: this.state.rewardLevel3Name,\n      completion: this.state.completion,\n      level1ChoreList: this.state.level1ChoreList,\n      handleLevel1RewardNameChange: this.handleLevel1RewardNameChange,\n      handleSaveLevel1Reward: this.handleSaveLevel1Reward,\n      handleCheckboxChange: this.handleCheckboxChange,\n      level2ChoreList: this.state.level2ChoreList,\n      handleLevel2RewardNameChange: this.handleLevel2RewardNameChange,\n      handleSaveLevel2Reward: this.handleSaveLevel2Reward,\n      level3ChoreList: this.state.level3ChoreList,\n      handleLevel3RewardNameChange: this.handleLevel3RewardNameChange,\n      handleSaveLevel3Reward: this.handleSaveLevel3Reward,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default RewardList;","map":{"version":3,"sources":["/Users/sitruk/Desktop/bootcamp/homework/project3/project-3/client/src/pages/RewardList.js"],"names":["React","Component","NavTabs","RewardForm","API","RewardList","constructor","props","handleLevel1RewardNameChange","event","setState","rewardLevel1Name","target","value","handleSaveLevel1Reward","preventDefault","console","log","state","savedReward","id","rewardList","filter","obj","level","_id","rewardName","saveReward","then","message","alert","res","componentDidMount","catch","err","handleLevel2RewardNameChange","rewardLevel2Name","handleSaveLevel2Reward","handleLevel3RewardNameChange","rewardLevel3Name","handleSaveLevel3Reward","handleCheckboxChange","completion","itemName","name","isChecked","checked","getAttribute","dueDate","prevState","checkedItems","set","chore","choreName","updateChore","Map","level1ChoreList","level2ChoreList","level3ChoreList","bind","getReward","level1Name","data","level2Name","level3Name","getChoreByLevel","chores","level1TotalChores","length","level1ChoreComplete","level2TotalChores","level3TotalChores","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport NavTabs from \"../components/NavTabs/NavTabs\";\nimport RewardForm from \"../components/RewardForm/RewardForm\"\n// import CheckboxContainer from \"../components/CheckboxContainer/CheckboxContainer\";\nimport API from \"../utils/API\";\n\n\nclass RewardList extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            rewardLevel1Name: \"\",\n            rewardLevel2Name: \"\",\n            rewardLevel3Name: \"\",\n            level: \"1\",\n            checkedItems: new Map (),\n            completion: \"false\",\n    \n            rewardList: [],\n            level1ChoreList: [],\n            level2ChoreList: [],\n            level3ChoreList: []\n        }\n\n        this.handleCheckboxChange = this.handleCheckboxChange.bind(this);\n    }\n\n    // state = {\n    //     rewardLevel1Name: \"\",\n    //     rewardLevel2Name: \"\",\n    //     rewardLevel3Name: \"\",\n    //     level: \"1\",\n    //     completion: \"false\",\n\n    //     rewardList: [],\n    //     level1ChoreList: [],\n    //     level2ChoreList: [],\n    //     level3ChoreList: []\n\n    // }\n\n    componentDidMount() {\n        API.getReward()\n            .then(res => {\n                let level1Name = res.data.filter(obj => obj.level === \"1\")[0].rewardName;\n                let level2Name = res.data.filter(obj => obj.level === \"2\")[0].rewardName;\n                let level3Name = res.data.filter(obj => obj.level === \"3\")[0].rewardName;\n\n                this.setState({\n                    rewardList: res.data,\n                    rewardLevel1Name: level1Name,\n                    rewardLevel2Name: level2Name,\n                    rewardLevel3Name: level3Name\n                })\n\n\n            })\n            .then(() => {\n                API.getChoreByLevel(\"1\")\n                    .then(res => {\n                        console.log(\"is it here\", res.data[0].chores);\n                        this.setState({ level1ChoreList: res.data[0].chores })\n                        const level1TotalChores = res.data[0].chores.length;\n                        console.log(level1TotalChores);\n                        const level1ChoreComplete = res.data[0].checkedItems;\n                        console.log(level1ChoreComplete);\n                        console.log(typeof(level1ChoreComplete));\n                    })\n\n\n                API.getChoreByLevel(\"2\")\n                    .then(res => {\n                        console.log(\"is it here\", res.data[0].chores);\n                        this.setState({ level2ChoreList: res.data[0].chores })\n                        const level2TotalChores = res.data[0].chores.length;\n                        console.log(level2TotalChores);\n\n                    })\n                API.getChoreByLevel(\"3\")\n                    .then(res => {\n                        console.log(\"is it here\", res.data[0].chores);\n                        this.setState({ level3ChoreList: res.data[0].chores })\n                        const level3TotalChores = res.data[0].chores.length;\n                        console.log(level3TotalChores);\n\n                    })\n\n            })\n            .catch(err => console.log(err))\n\n    }\n\n    handleLevel1RewardNameChange = event => {\n        this.setState({ rewardLevel1Name: event.target.value })\n    }\n\n    handleSaveLevel1Reward = event => {\n        event.preventDefault();\n        console.log('level1', this.state.rewardLevel1Name)\n        let savedReward = {\n            id: this.state.rewardList.filter(obj => obj.level === \"1\")[0]._id,\n            rewardName: this.state.rewardLevel1Name,\n            level: \"1\"\n        }\n        API.saveReward(savedReward)\n            .then(this.setState({ message: alert(\"Your reward is saved!\") }))\n            .then(res => this.componentDidMount())\n            .catch(err => console.log(err))\n    }\n\n    handleLevel2RewardNameChange = event => {\n        this.setState({ rewardLevel2Name: event.target.value })\n    }\n\n    handleSaveLevel2Reward = event => {\n        event.preventDefault();\n        console.log('level 2', this.state.rewardLevel2Name)\n        let savedReward = {\n            id: this.state.rewardList.filter(obj => obj.level === \"2\")[0]._id,\n            rewardName: this.state.rewardLevel2Name,\n            level: \"2\"\n        }\n        API.saveReward(savedReward)\n            .then(this.setState({ message: alert(\"Your reward is saved!\") }))\n            .then(res => this.componentDidMount())\n            .catch(err => console.log(err))\n    }\n\n    handleLevel3RewardNameChange = event => {\n        this.setState({ rewardLevel3Name: event.target.value })\n    }\n\n    handleSaveLevel3Reward = event => {\n        event.preventDefault();\n        console.log('level 3', this.state.rewardLevel3Name)\n        let savedReward = {\n            id: this.state.rewardList.filter(obj => obj.level === \"3\")[0]._id,\n            rewardName: this.state.rewardLevel3Name,\n            level: \"3\"\n        }\n        API.saveReward(savedReward)\n            .then(this.setState({ message: alert(\"Your reward is saved!\") }))\n            .then(res => this.componentDidMount())\n            .catch(err => console.log(err))\n    }\n\n    handleCheckboxChange = event => {\n        event.preventDefault();\n        console.log('completion status', this.state.completion);\n        console.log(\"what is event\", event.target);\n        const itemName = event.target.name;\n        const isChecked = event.target.checked;\n        const id = event.target.id;\n        const level = event.target.getAttribute('level');\n        const dueDate = event.target.getAttribute('duedate');\n        this.setState(prevState => ({ checkedItems: prevState.checkedItems.set(itemName, isChecked) }));\n\n        console.log(\"combine\", itemName, isChecked, id, level, dueDate);\n        let chore = {\n            id: id,\n            choreName: itemName,\n            completion: isChecked,\n            dueDate: dueDate,\n            level: level\n        }\n\n        API.updateChore(chore)\n            // .then(this.setState({message:alert(\"Good job!\")}))\n            .then(res => this.componentDidMount())\n            .catch(err => console.log(err))\n\n\n    }\n\n\n\n    render() {\n        return (\n            <div>\n                <NavTabs />\n                <RewardForm\n                    rewardLevel1Name={this.state.rewardLevel1Name}\n                    rewardLevel2Name={this.state.rewardLevel2Name}\n                    rewardLevel3Name={this.state.rewardLevel3Name}\n                    completion={this.state.completion}\n\n                    level1ChoreList={this.state.level1ChoreList}\n                    handleLevel1RewardNameChange={this.handleLevel1RewardNameChange}\n                    handleSaveLevel1Reward={this.handleSaveLevel1Reward}\n                    handleCheckboxChange={this.handleCheckboxChange}\n\n                    level2ChoreList={this.state.level2ChoreList}\n                    handleLevel2RewardNameChange={this.handleLevel2RewardNameChange}\n                    handleSaveLevel2Reward={this.handleSaveLevel2Reward}\n\n                    level3ChoreList={this.state.level3ChoreList}\n                    handleLevel3RewardNameChange={this.handleLevel3RewardNameChange}\n                    handleSaveLevel3Reward={this.handleSaveLevel3Reward}\n                />\n                {/* <RewardForm>\n                rewardLevel1Name={this.state.rewardLevel1Name}\n                rewardLevel2Name={this.state.rewardLevel2Name}\n                rewardLevel3Name={this.state.rewardLevel3Name}\n                completion={this.state.completion}\n                </RewardForm>\n                <RewardForm>\n                level1ChoreList={this.state.level1ChoreList}\n                handleLevel1RewardNameChange={this.handleLevel1RewardNameChange}\n                handleSaveLevel1Reward={this.handleSaveLevel1Reward}\n                handleCheckboxChange={this.handleCheckboxChange}\n                </RewardForm>\n                <RewardForm>\n                level2ChoreList={this.state.level2ChoreList}\n                handleLevel2RewardNameChange={this.handleLevel2RewardNameChange}\n                handleSaveLevel2Reward={this.handleSaveLevel2Reward}\n                </RewardForm>\n                <RewardForm>\n                level3ChoreList={this.state.level3ChoreList}\n                handleLevel3RewardNameChange={this.handleLevel3RewardNameChange}\n                handleSaveLevel3Reward={this.handleSaveLevel3Reward}\n                </RewardForm> */}\n                \n            </div>\n\n        )\n    }\n}\n\nexport default RewardList"]},"metadata":{},"sourceType":"module"}