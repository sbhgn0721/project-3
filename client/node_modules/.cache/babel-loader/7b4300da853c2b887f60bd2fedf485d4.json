{"ast":null,"code":"var _jsxFileName = \"/Users/sitruk/Desktop/bootcamp/homework/project3/project-3/client/src/components/CheckboxContainer/CheckboxContainer.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Checkbox from \"./Checkbox\";\n\nclass CheckboxContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      checkedItems: new Map()\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(e) {\n    const item = e.target.name;\n    const isChecked = e.target.checked;\n    this.setState(prevState => ({\n      checkedItems: prevState.checkedItems.set(item, isChecked)\n    }));\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, checkboxes.map(item => React.createElement(\"label\", {\n      key: item.key,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, item.name, React.createElement(Checkbox, {\n      name: item.name,\n      checked: this.state.checkedItems.get(item.name),\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default CheckboxContainer;\nprops.level1ChoreList.map(item => {\n  return React.createElement(\"div\", {\n    className: \"form-group form-row choreCheckList\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"input-group \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"checkbox\",\n    className: \"choreCheckListCheckBox\",\n    \"aria-label\": \"Checkbox for following text input\",\n    checked: item.completion,\n    name: item.choreName,\n    level: item.level,\n    duedate: item.dueDate,\n    id: item._id,\n    onChange: props.handleCheckboxChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    className: \"choreCheckListItem\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, item.choreName), \"  \", React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), \" \", React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, Moment(item.dueDate).utc().format(\"YYYY-MM-DD\")))));\n});","map":{"version":3,"sources":["/Users/sitruk/Desktop/bootcamp/homework/project3/project-3/client/src/components/CheckboxContainer/CheckboxContainer.js"],"names":["React","PropTypes","Checkbox","CheckboxContainer","Component","constructor","props","state","checkedItems","Map","handleChange","bind","e","item","target","name","isChecked","checked","setState","prevState","set","render","checkboxes","map","key","get","level1ChoreList","completion","choreName","level","dueDate","_id","handleCheckboxChange","Moment","utc","format"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,MAAMC,iBAAN,SAAgCH,KAAK,CAACI,SAAtC,CAAgD;AAC5CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,YAAY,EAAE,IAAIC,GAAJ;AADL,KAAb;AAIA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACH;;AAEDD,EAAAA,YAAY,CAACE,CAAD,EAAI;AACZ,UAAMC,IAAI,GAAGD,CAAC,CAACE,MAAF,CAASC,IAAtB;AACA,UAAMC,SAAS,GAAGJ,CAAC,CAACE,MAAF,CAASG,OAA3B;AACA,SAAKC,QAAL,CAAcC,SAAS,KAAK;AAAEX,MAAAA,YAAY,EAAEW,SAAS,CAACX,YAAV,CAAuBY,GAAvB,CAA2BP,IAA3B,EAAiCG,SAAjC;AAAhB,KAAL,CAAvB;AACH;;AAEDK,EAAAA,MAAM,GAAG;AACL,WACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQC,UAAU,CAACC,GAAX,CAAeV,IAAI,IACf;AAAO,MAAA,GAAG,EAAEA,IAAI,CAACW,GAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKX,IAAI,CAACE,IADV,EAEI,oBAAC,QAAD;AAAU,MAAA,IAAI,EAAEF,IAAI,CAACE,IAArB;AAA2B,MAAA,OAAO,EAAE,KAAKR,KAAL,CAAWC,YAAX,CAAwBiB,GAAxB,CAA4BZ,IAAI,CAACE,IAAjC,CAApC;AAA4E,MAAA,QAAQ,EAAE,KAAKL,YAA3F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ,CAFR,CADJ;AAYH;;AA9B2C;;AAiChD,eAAeP,iBAAf;AAEAG,KAAK,CAACoB,eAAN,CAAsBH,GAAtB,CAA0BV,IAAI,IAAI;AAC9B,SACA;AAAK,IAAA,SAAS,EAAC,oCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAwB,IAAA,SAAS,EAAC,wBAAlC;AAA2D,kBAAW,mCAAtE;AACA,IAAA,OAAO,EAAEA,IAAI,CAACc,UADd;AAC0B,IAAA,IAAI,EAAEd,IAAI,CAACe,SADrC;AACgD,IAAA,KAAK,EAAEf,IAAI,CAACgB,KAD5D;AACmE,IAAA,OAAO,EAAEhB,IAAI,CAACiB,OADjF;AAC0F,IAAA,EAAE,EAAEjB,IAAI,CAACkB,GADnG;AACwG,IAAA,QAAQ,EAAEzB,KAAK,CAAC0B,oBADxH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAMI;AAAG,IAAA,SAAS,EAAC,oBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOnB,IAAI,CAACe,SAAZ,CAAlC,QAAiE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAjE,OAA+E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOK,MAAM,CAACpB,IAAI,CAACiB,OAAN,CAAN,CAAqBI,GAArB,GAA2BC,MAA3B,CAAkC,YAAlC,CAAP,CAA/E,CANJ,CADJ,CADA;AAWH,CAZD","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Checkbox from \"./Checkbox\";\n\nclass CheckboxContainer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            checkedItems: new Map(),\n        }\n\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChange(e) {\n        const item = e.target.name;\n        const isChecked = e.target.checked;\n        this.setState(prevState => ({ checkedItems: prevState.checkedItems.set(item, isChecked) }));\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                {\n                    checkboxes.map(item => (\n                        <label key={item.key}>\n                            {item.name}\n                            <Checkbox name={item.name} checked={this.state.checkedItems.get(item.name)} onChange={this.handleChange} />\n                        </label>\n                    ))\n                }\n            </React.Fragment>\n        );\n    }\n}\n\nexport default CheckboxContainer;\n\nprops.level1ChoreList.map(item => {\n    return (\n    <div className=\"form-group form-row choreCheckList\">\n        <div className=\"input-group \">\n            \n            <input type=\"checkbox\"  className=\"choreCheckListCheckBox\" aria-label=\"Checkbox for following text input\"\n            checked={item.completion} name={item.choreName} level={item.level} duedate={item.dueDate} id={item._id} onChange={props.handleCheckboxChange}\n            />\n            \n            <p className=\"choreCheckListItem\"><span>{item.choreName}</span>  <span></span> <span>{Moment(item.dueDate).utc().format(\"YYYY-MM-DD\")}</span></p>\n        </div>\n    </div>)\n})"]},"metadata":{},"sourceType":"module"}